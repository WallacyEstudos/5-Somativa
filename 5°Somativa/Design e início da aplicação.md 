# Semana 2: Sprint 1 - Design e Início da Implementação

---

## **Objetivo**

Estruturar o design e iniciar a implementação das funcionalidades essenciais do projeto, garantindo uma base sólida para o desenvolvimento futuro.

---

## **1. Definição da Arquitetura**

### **Arquitetura Escolhida: MVC (Model-View-Controller)**

Optamos pela arquitetura MVC para organizar o projeto devido às suas vantagens:

### **Motivos para a Escolha da Arquitetura MVC**
1. **Separação de responsabilidades**:
   - Facilita o desenvolvimento paralelo, permitindo que diferentes equipes trabalhem na camada de visualização, lógica de negócios e manipulação de dados de forma independente.

2. **Facilidade de manutenção**:
   - Alterações em uma camada não afetam diretamente as demais, reduzindo o risco de bugs e aumentando a agilidade na implementação de mudanças.

3. **Escalabilidade**:
   - A organização modular torna o projeto mais escalável, suportando o crescimento de funcionalidades e novas demandas com facilidade.

4. **Reutilização de código**:
   - Componentes como modelos e controladores podem ser reutilizados em outras partes do sistema, economizando tempo de desenvolvimento.

### **Como Isso Ajudará no Desenvolvimento**
- **Frontend (View)**: Utilizaremos React para a interface do usuário, promovendo componentes reutilizáveis e integração com o backend.
- **Backend (Controller e Model)**: Node.js com Express e PostgreSQL será utilizado para a lógica de negócios e armazenamento de dados.
- **Comunicação**: APIs RESTful garantirão integração fluida entre as camadas.

---

## **2. Configuração do Ambiente de Desenvolvimento**

### **Ferramentas Escolhidas**

#### **1. Visual Studio Code (VS Code)**
**Vantagens:**
- Interface amigável e personalizável.
- Extensões como ESLint e Prettier garantem qualidade do código.
- Suporte para integração com sistemas de controle de versão (Git/GitHub).

**Configuração:**
1. Baixe e instale o VS Code do site oficial.
2. Instale extensões importantes:
   - ESLint: Identifica problemas de código em tempo real.
   - Prettier: Formatação automática de código.
   - React Developer Tools: Para depuração de aplicações React.

---

#### **2. React**
**Vantagens:**
- Facilita a criação de interfaces dinâmicas e responsivas.
- Reutilização de componentes acelera o desenvolvimento.
- Comunidade ativa e grande quantidade de bibliotecas disponíveis.

**Configuração:**
1. Instale o Node.js e o gerenciador de pacotes npm.
2. Configure o ambiente React:
   ```bash
   npx create-react-app projeto-contraprovas
   cd projeto-contraprovas
   npm start